#!/bin/bash

BASEDIR="${HOME}/linux-config"

read -n1 -p "Map escape key to Caps Lock [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	sudo rm /etc/X11/xorg.conf.d/00-keyboard.conf
	sudo ln -s ${HOME}/linux-config/00-keyboard.conf /etc/X11/xorg.conf.d/00-keyboard.conf
else
	echo " "
fi

read -n1 -p "Install yay [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	git clone https://aur.archlinux.org/yay-git.git ${HOME}/yay-git
	cd ${HOME}/yay-git
	makepkg -si
else
	echo "\nSkipping xmonad & xmobar...\n"
fi

read -n1 -p "Install xmonad & xmobar along with config files & its dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then

	sudo pacman -S xmonad xmonad-contrib xmobar base-devel xdotool bluez bluez-libs bluez-utils
	yay -S ttf-font-awesome nerd-fonts-mononoki lux checkupdates+aur

	echo "setting up xmonad configs..."
	rm -rf ${HOME}/.xmonad
	ln -s ${BASEDIR}/.xmonad ${HOME}/
	rm -rf ${HOME}/.config/xmobar
	ln -s ${BASEDIR}/.config/xmobar ${HOME}/.config/

	echo "adding connect script to PATH..."
	chmod a+x ${BASEDIR}/scripts/connect
	sudo ln -s ${BASEDIR}/scripts/connect /usr/local/bin/connect
	echo "adding pacupdate script to PATH..."
	chmod a+x ${BASEDIR}/scripts/pacupdate
	sudo ln -s ${BASEDIR}/scripts/pacupdate /usr/local/bin/pacupdate
	echo "adding sysexit script to PATH..."
	chmod a+x ${BASEDIR}/scripts/sysexit
	sudo ln -s ${BASEDIR}/scripts/sysexit /usr/local/bin/sysexit
else
	echo "\nSkipping xmonad & xmobar...\n"
fi


read -n1 -p "Install dmenu along with config files [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	sudo pacman -S dmenu
	echo "setting up dmenu configs..."
	cd ${BASEDIR}/dmenu-5.0
	sudo make install
else
	echo "\nSkipping dmenu...\n"
fi

read -n1 -p "Install kitty along with config files [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	sudo pacman -S kitty
	echo "setting up kitty configs..."
	rm -rf ${HOME}/.config/kitty
	ln -s ${BASEDIR}/.config/kitty ~/.config/
else
	echo "\nSkipping dmenu...\n"
fi

read -n1 -p "Setup bash along with config files & dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	echo "installing bash settings..."
	sudo pacman -S neofetch bash-completion python-pip exa 
	yay -S devour
	pip install powerline-shell
	rm ${HOME}/.bashrc
	ln -s ${BASEDIR}/.bashrc ~/.bashrc
else
	echo "\nSkipping bash configuration...\n"
fi

read -n1 -p "Install vifm along with config files & dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	echo "installing vifm..."
	sudo pacman -S vifm
	rm -rf ${HOME}/.config/vifm
	ln -s ${BASEDIR}/.config/vifm ~/.config/
else
	echo "\nSkipping vifm...\n"
fi

read -n1 -p "Install vim along with config files & dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	echo "installing vim..."
	sudo pacman -S vim
	rm ${HOME}/.vimrc
	ln -s ${BASEDIR}/.vimrc ~/.vimrc
else
	echo "\nSkipping vim...\n"
fi

read -n1 -p "Install qutebrowser along with config files & dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	echo "installing qutebrowser..."
	sudo pacman -S qutebrowser
	rm -rf ${HOME}/.config/qutebrowser
	ln -s ${BASEDIR}/.config/qutebrowser ~/.config/
else
	echo "\nSkipping qutebrowser...\n"
fi

read -n1 -p "Install picom along with config files & dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	echo "installing qutebrowser..."
	sudo pacman -S picom
	rm -rf ${HOME}/.config/picom
	ln -s ${BASEDIR}/.config/picom ~/.config/
else
	echo "\nSkipping picom...\n"
fi

read -n1 -p "Install dunst along with config files & dependencies [Y/n] : " install
if [ "${install^^}" = "Y" ] || [ "${install^^}" = "" ] 
then
	echo "installing dunst..."
	sudo pacman -S dunst
	rm -rf ${HOME}/.config/dunst
	ln -s ${BASEDIR}/.config/dunst ~/.config/
else
	echo "\nSkipping dunst...\n"
fi